/*----------------------------------------------------------------------------*/
/* Copyright (c) FIRST 2008. All Rights Reserved.                             */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

package com.team2574;


import edu.wpi.first.wpilibj.CANJaguar;
import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.RobotDrive;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */
public class Robot extends IterativeRobot {
    /**
     * This function is run when the robot is first started up and should be
     * used for any initialization code.
     */
    CANJaguar Jaguar1;
    CANJaguar Jaguar2;
    CANJaguar Jaguar3;
    CANJaguar Jaguar4;
    
    Relay Relay1;
    Relay Relay2;
    Relay Relay3;
    Relay Relay4;
    
    Talon Talon1;
    
    Joystick BilltheJoystick;
     
    RobotDrive Drive1;
    
    
    public void robotInit() {
        try {
            Jaguar1 = new CANJaguar(1);
            Jaguar2 = new CANJaguar(2);
            Jaguar3 = new CANJaguar(3);
            Jaguar4 = new CANJaguar(4);
            
           
        } catch(Exception e) {
            e.printStackTrace();
        }
            Relay1 = new Relay(1);
            Relay2 = new Relay(2);
            Relay3 = new Relay(3);
            Relay4 = new Relay(4);
        BilltheJoystick = new Joystick(0);
        Drive1 = new RobotDrive(Jaguar1,Jaguar2,Jaguar3,Jaguar4);
    }

    /**
     * This function is called periodically during autonomous
     */
    public void autonomousPeriodic() {

    }

    /**
     * This function is called periodically during operator control
     */
    public void teleopPeriodic() {
     Drive1.arcadeDrive(BilltheJoystick.getRawAxis(2),BilltheJoystick.getRawAxis(3));
     
     if (BilltheJoystick.getRawButton(1)){
    Relay1 .set(Relay.Value.kOn); 
    }
    else {
    Relay1.set(Relay.Value.kOff);
    }
    
     if (BilltheJoystick.getRawButton(2)){
    Relay2 .set(Relay.Value.kOn); 
    }
    else {
    Relay2.set(Relay.Value.kOff);
    }
     
     if (BilltheJoystick.getRawButton(3)){
    Relay3 .set(Relay.Value.kOn); 
    }
    else {
    Relay3.set(Relay.Value.kOff);
    }
     
     if (BilltheJoystick.getRawButton(4)){
    Relay4 .set(Relay.Value.kOn); 
    }
    else {
    Relay4.set(Relay.Value.kOff);
    }    
    }
    
    /**
     * This function is called periodically during test mode
     */
    public void testPeriodic() {
    
    }
    }
    

